:root {
    /* Colors */
    --overlay-color: rgba(129, 218, 240, 0.5);
    --constraint-color: rgb(131, 57, 117);
    --clear-color: rgba(255, 255, 255,0.0);
    --line-color: #444444;
    --fill-color: #ffffff;
    /* General sizes */
    --svg-scale: 600;
    --svg-scale-max: 1000;
    --svg-scale-min: 100;
    --stroke-width: 2px; /* 2 px */
    --stroke-width-wide: 6px; /* 6 px */
    --font-size-xl: 1.2em; /* 18 px */
    --font-size-lg: 1em; /* 16 px */
    --font-size-md: 0.8em; /* 14 px */
    --font-size-sm: 0.7em; /* 14 px */
    /* Entity sizes */
    --entity-rx-ry: 7px; /* 7 px */
    --entity-height: 51px; /* 50 px */
    --entity-overlay-r: 12px; /* 12 px */
    /* Rolebox sizes */
    --rolebox-width: 51px; /* 51 px */
    --rolebox-height: 19px; /* 19 px */
    --rolebox-overlay-r: 8px; /* 8 px */
    /* Constraint sizes */
    --constraint-radius: 14px; /* 29 px */
    --constraint-oradius: 22px; /* 29 px */
}

@font-face {
    font-family: 'Montserrat Light';
    src: url(../style/fonts/Montserrat/Montserrat-Light.ttf)  format('truetype');
}

@font-face {
    font-family: 'Montserrat';
    src: url(../style/fonts/Montserrat/Montserrat-Regular.ttf)  format('truetype');
}

@font-face {
    font-family: 'Montserrat Bold';
    src: url(../style/fonts/Montserrat/Montserrat-SemiBold.ttf)  format('truetype');
}

body {
    font-family: 'Montserrat Light', 'Trebuchet MS', Tahoma, Sans-Serif; /* Back up font is for saving svgs */
    font-size: var(--font-size-lg);
}

svg { 
    transform-box: fill-box;
    transform-origin: center;
}

/* All objects */

.shadowed {
    filter: drop-shadow(5px 5px 2px rgb(0,0,0,0.4));
}

.overlay {
    fill: var(--overlay-color);
    cursor: pointer;
    opacity: 0.0;
}

.overlay:hover {
    fill: var(--overlay-color);
    opacity: 1.0;
}

/* Entities */

.entity_prototype {
    cursor: grab;
}

.entity {
    fill: var(--fill-color);
    stroke: var(--line-color);
    stroke-width: var(--stroke-width);
    /* width determined by entity name */
    height: var(--entity-height);
    rx: var(--entity-rx-ry);
    ry: var(--entity-rx-ry);
}

.eoverlay {
    r: var(--entity-overlay-r);
}

.ename {
    font-family: 'Montserrat Light', 'Trebuchet MS', Tahoma, Sans-Serif;
    font-size: var(--font-size-lg);
    user-select: none;
    -moz-user-select:none;
    -webkit-user-select:none;
}

.refmode {
    font-family: 'Montserrat Light', 'Trebuchet MS', Tahoma, Sans-Serif;
    font-size: var(--font-size-md);
    user-select: none;
    -moz-user-select:none;
    -webkit-user-select:none;
}

/* Values */

.value_prototype {
    cursor: grab;
}

.value {
    fill: var(--fill-color);
    stroke: var(--line-color);
    stroke-width: var(--stroke-width);
    stroke-dasharray: 5,3;
    /* width determined by entity name */
    height: var(--entity-height);
    rx: var(--entity-rx-ry);
    ry: var(--entity-rx-ry);
}

.voverlay {
    r: var(--entity-overlay-r);
}

/* Roleboxes */

.rolebox_group {
    cursor: grab;
}

.rolebox {
    fill: var(--fill-color);
    stroke: var(--line-color);
    stroke-width: var(--stroke-width);
    width: var(--rolebox-width);
    height: var(--rolebox-height);
}

.rboverlay {
    r: var(--rolebox-overlay-r);
    stroke-width: 0;
}


.rbadd {
    stroke: var(--overlay-color);
    stroke-width: var(--stroke-width-wide);
    opacity: 0.0;
    cursor: pointer;
}

.rbadd:hover {
    opacity: 1.0;
}

.rbname {
    font-family: 'Montserrat Light', 'Trebuchet MS', Tahoma, Sans-Serif;
    font-size: var(--font-size-md);
    user-select: none;
    -moz-user-select:none;
    -webkit-user-select:none;
}

/* Rolebox Uniqueness Constraints */

.rb_constraint {
    stroke: var(--constraint-color);
    stroke-width: var(--stroke-width);
}

/* Connectors */

.connector_prototype {
    cursor: pointer;
}

.connector {
    stroke-width: var(--stroke-width);
    stroke: var(--line-color);
    stroke-linecap: "round";
}

.connector.conn_mouseover {
    stroke-width: var(--stroke-width-wide);
    opacity: 0.7;
    cursor: pointer ;
    stroke-dasharray: none;
}

.connector.clear.conn_mouseover {
    fill-opacity: 0.7;
}

.connector.clear {
    stroke-width: var(--stroke-width-wide);
    stroke: var(--clear-color);
    fill: var(--constraint-color);
}

.connector.line {
    stroke: var(--line-color);
}

.connector.constraint {
    stroke-dasharray: 4,5;
    stroke: var(--constraint-color);
    fill: var(--constraint-color);
}

.connector.constraint.object {
    stroke: var(--clear-color);
    stroke-width: var(--stroke-width-wide);
    fill: var(--constraint-color);
    stroke-dasharray: none;
}

.subtype {
    stroke: var(--constraint-color);
    stroke-width: calc(1.5*var(--stroke-width));
    fill: var(--constraint-color);
}

.subtype.dashed {
    stroke-dasharray: 4,5;
}

/* External constraints */

.constraint_prototype {
    cursor: grab;
}

.constraint {
    fill: var(--fill-color);
    stroke: var(--constraint-color);
    stroke-width: var(--stroke-width);
}
.constraint.clear {
    fill: var(--clear-color);
    stroke: var(--clear-color);
}

.constraint_val {
    stroke: var(--constraint-color);
    stroke-width: var(--stroke-width);
    fill: var(--constraint-color);
}

.constraint_text {
    font-family: 'Montserrat Light', 'Trebuchet MS', Tahoma, Sans-Serif;
    font-size: var(--font-size-lg);
    letter-spacing: 0.1em;
    color: var(--constraint-color);
    fill: var(--constraint-color);
    stroke: var(--constraint-color);
    stroke-width: calc(var(--stroke-width)/2);
    user-select: none;
}

/* Highlight Rectangle */

.highlight_rect {
    fill: var(--overlay-color);
    stroke: var(--line-color);
    stroke-width: 0px;
}

/* Rel */

.notparsed {
    filter: drop-shadow(0px 0px 5px rgba(255, 51, 51, 0.7));
}

.selected {
    filter: drop-shadow(0px 0px 5px var(--overlay-color));
}