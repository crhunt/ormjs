@font-face {
    font-family: 'Montserrat Light';
    src: url(../style/fonts/Montserrat/Montserrat-Light.ttf)  format('truetype');
}

@font-face {
    font-family: 'Montserrat';
    src: url(../style/fonts/Montserrat/Montserrat-Regular.ttf)  format('truetype');
}

@font-face {
    font-family: 'Montserrat Bold';
    src: url(../style/fonts/Montserrat/Montserrat-SemiBold.ttf)  format('truetype');
}

body {
    font-family: 'Montserrat Light', 'Trebuchet MS', Tahoma, Sans-Serif; /* Back up font is for saving svgs */
    font-size: var(--ojs-font-size-lg);
}

svg { 
    transform-box: fill-box;
    transform-origin: center;
}

/* All objects */

.ormjs-shadowed {
    filter: drop-shadow(5px 5px 2px rgb(0,0,0,0.4));
}

.ormjs-overlay {
    fill: var(--ojs-overlay-color);
    cursor: pointer;
    opacity: 0.0;
}

.ormjs-overlay:hover {
    fill: var(--ojs-overlay-color);
    opacity: 1.0;
}

/* Entities */

.ormjs-entity_prototype {
    cursor: grab;
}

.ormjs-entity {
    fill: var(--ojs-entity-fill-color);
    stroke: var(--ojs-entity-border-color);
    stroke-width: var(--ojs-entity-border);
    /* width determined by entity name */
    height: var(--ojs-entity-height);
    rx: var(--ojs-entity-rx-ry);
    ry: var(--ojs-entity-rx-ry);
}

.ormjs-eoverlay {
    r: var(--ojs-entity-overlay-r);
}

.ormjs-ename {
    font-family: 'Montserrat Light', 'Trebuchet MS', Tahoma, Sans-Serif;
    font-size: var(--ojs-font-size-lg);
    fill: var(--ojs-entity-text-color);
    user-select: none;
    -moz-user-select:none;
    -webkit-user-select:none;
}

.ormjs-refmode {
    font-family: 'Montserrat Light', 'Trebuchet MS', Tahoma, Sans-Serif;
    font-size: var(--ojs-font-size-md);
    fill: var(--ojs-entity-text-color);
    user-select: none;
    -moz-user-select:none;
    -webkit-user-select:none;
}

/* Values */

.ormjs-value_prototype {
    cursor: grab;
}

.ormjs-value {
    fill: var(--ojs-value-fill-color);
    stroke: var(--ojs-value-border-color);
    stroke-width: var(--ojs-value-border);
    stroke-dasharray: 5,3;
    /* width determined by entity name */
    height: var(--ojs-entity-height);
    rx: var(--ojs-entity-rx-ry);
    ry: var(--ojs-entity-rx-ry);
}

.ormjs-voverlay {
    r: var(--ojs-entity-overlay-r);
}

.ormjs-vname {
    font-family: 'Montserrat Light', 'Trebuchet MS', Tahoma, Sans-Serif;
    font-size: var(--ojs-font-size-lg);
    fill: var(--ojs-value-text-color);
    user-select: none;
    -moz-user-select:none;
    -webkit-user-select:none;
}

/* Roleboxes */

.ormjs-rolebox_group {
    cursor: grab;
}

.ormjs-rolebox {
    fill: var(--ojs-role-fill-color);
    stroke: var(--ojs-role-border-color);
    stroke-width: var(--ojs-rolebox-border);
    width: var(--ojs-rolebox-width);
    height: var(--ojs-rolebox-height);
}

.ormjs-rboverlay {
    r: var(--ojs-rolebox-overlay-r);
    stroke-width: 0;
}


.ormjs-rbadd {
    stroke: var(--ojs-overlay-color);
    stroke-width: var(--ojs-stroke-width-wide);
    opacity: 0.0;
    cursor: pointer;
}

.ormjs-rbadd:hover {
    opacity: 1.0;
}

.ormjs-rbname {
    font-family: 'Montserrat Light', 'Trebuchet MS', Tahoma, Sans-Serif;
    font-size: var(--ojs-font-size-md);
    fill: var(--ojs-predicate-text-color);
    user-select: none;
    -moz-user-select:none;
    -webkit-user-select:none;
}

/* Rolebox Uniqueness Constraints */

.ormjs-rb_constraint {
    stroke: var(--ojs-constraint-color);
    stroke-width: var(--ojs-constraint-border);
}

/* Connectors */

.connector_prototype {
    cursor: pointer;
}

.connector {
    stroke-width: var(--ojs-stroke-width);
    stroke-linecap: "round";
}

.connector.conn_mouseover {
    stroke-width: var(--ojs-stroke-width-wide);
    opacity: 0.7;
    stroke-dasharray: none;
}

.clear.arrow.conn_mouseover {
    stroke: var(--ojs-constraint-color);
}

.connector.clear {
    stroke-width: var(--ojs-stroke-width-wide);
    stroke: var(--ojs-clear-color);
    fill: var(--ojs-constraint-color);
    stroke-dasharray: none;
}

.connector.line {
    stroke: var(--ojs-line-color);
}

.connector.constraint {
    stroke-dasharray: 4,5;
    stroke: var(--ojs-constraint-color);
    fill: var(--ojs-constraint-color);
}

.subtype {
    stroke: var(--ojs-constraint-color);
    stroke-width: calc(1.5*var(--ojs-stroke-width));
    fill: var(--ojs-constraint-color);
}

.subtype.dashed {
    stroke-dasharray: 4,5;
}

/* External constraints */

.constraint_prototype {
    cursor: grab;
}

.constraint {
    fill: var(--ojs-constraint-fill-color);
    stroke: var(--ojs-constraint-color);
    stroke-width: var(--ojs-stroke-width);
}
.constraint.clear {
    fill: var(--ojs-clear-color);
    stroke: var(--ojs-clear-color);
}

.constraint_val {
    stroke: var(--ojs-constraint-color);
    stroke-width: var(--ojs-stroke-width);
    fill: var(--ojs-constraint-color);
}

.constraint_text {
    font-family: 'Montserrat Light', 'Trebuchet MS', Tahoma, Sans-Serif;
    font-size: var(--ojs-font-size-lg);
    letter-spacing: 0.1em;
    color: var(--ojs-constraint-color);
    fill: var(--ojs-constraint-color);
    stroke: var(--ojs-constraint-color);
    stroke-width: calc(var(--ojs-stroke-width)/2);
    user-select: none;
}

/* Highlight Rectangle */

.highlight_rect {
    fill: var(--ojs-overlay-color);
    stroke: var(--ojs-line-color);
    stroke-width: 0px;
}

/* Rel */

.notparsed {
    filter: drop-shadow(0px 0px 5px rgba(255, 51, 51, 0.7));
}

.selected {
    filter: drop-shadow(0px 0px 5px var(--ojs-overlay-color));
}